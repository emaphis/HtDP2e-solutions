;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname 03_Composting_Functions) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;; HtDP 2e 2.3 Functions
;; 2.3 Composiiing Functions
;; Exercises 27-29

#|
 Programs usually consist of a main function that calls helper functions

 Define one function per task.
|#

;; main function

(define (letter fst lst signature-name) 
  (string-append
   (opening fst) 
   "\n\n"
   (body fst lst) 
   "\n\n"
   (closing signature-name)))

;; auxiliary functions or helper functions.

(define (opening fst)
  (string-append "Dear " fst ","))

(define (body fst lst) 
  (string-append 
   "We have discovered that all people with the"  "\n"
   "last name " lst " have won our lottery. So, " "\n"
   fst ", " "hurry and pick up your prize."))

(define (closing signature-name) 
  (string-append 
   "Sincerely," 
   "\n\n"
   signature-name
   "\n"))

;;(letter "Matthew" "Krishnamurthi" "Felleisen")
;;"Dear Matthew,\n\nwe have discovered that all people with the\nlast name Krishnamurthi have won our lottery. So, \nMatthew, hurry and pick up your prize.\n\nSincerely,\n\nFelleisen\n"

;;(letter "Kathi" "Felleisen" "Findler")
;;Krishnamurthi have won our lottery. So, \nMatthew, hurry and pick up your prize.\n\nSincerely,\n\nFelleisen\n"


;; Writting out a letter as a file.
;(require 2htdp/batch-io)
;(write-file 'stdout
;    (letter "Matthew" "Fisler" "Felleisen"))



;; Sample Problem
#|
The owner of a monopolistic movie theater in a small town has complete
freedom in setting ticket prices. The more he charges, the fewer people
can afford tickets. The less he charges, the more it costs to run a show
because attendance goes up. In a recent experiment the owner determined
a relationship between the price of a ticket and average attendance.

At a price of $5.00 per ticket, 120 people attend a performance.
For each 10-cent change in the ticket price,
the average attendance changes by 15 people.
That is, if the owner charges $5.10, some 105 people attend on the average;
if the price goes down to $4.90, average attendance increases to 135.
Letâ€™s translate this idea into a mathematical formula:

avg_attendance = 120 people - ($ change in price) / ($0.10) * 15 peopel

Unfortunately, the increased attendance also comes at an increased cost. Every performance
comes at a fixed cost of $180 to the owner plus a variable cost of $0.04 per attendee.
|#


;; the number of attendees depends on the ticket price.
#;
(define (attendees ticket-price)
  (+ 120 (* (/ 15 0.1) (- 5.0 ticket-price))))

;; The revenue is exclusively generated by the sale of tickets, 
#;
(define (revenue ticket-price)
  (*  (attendees ticket-price) ticket-price))

;; The cost consists of two parts: a fixed part ($180) and a variable part that
;; depends on the number of attendees.
#;s
(define (cost ticket-price)
  (+ 180 (* 0.04 (attendees ticket-price))))

;;  profit is the difference between revenue and costs for some given ticket price:
#;
(define (profit ticket-price)
  (- (revenue ticket-price)
     (cost ticket-price)))

;; explored in exercises 27, 28, 29